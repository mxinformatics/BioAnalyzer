# .NET build outputs
bin/
obj/
out/
publish/

# Visual Studio / VS Code
.vs/
.vscode/
*.suo
*.user
*.userosscache
*.sln.docstates

# JetBrains Rider
.idea/
*.sln.iml

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Test Coverage
coverage*.xml
coverage*.json
coverage*.info
lcov.info

# NuGet
*.nupkg
*.snupkg
.nuget/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# Node.js (if using npm/yarn for frontend assets)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Environment files
*.env
*.env.local
*.env.development.local
*.env.test.local
*.env.production.local

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
Desktop.ini

# Git
.git/
.gitignore
.gitattributes

# Documentation and README files
README.md
*.md
docs/

# Docker files (exclude other Docker files to avoid recursion)
Dockerfile*
.dockerignore
docker-compose*.yml

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# Application specific
appsettings.Development.json
appsettings.Local.json
*.http
*.rest

# Logs
logs/
*.log

# Database files (if any)
*.db
*.sqlite
*.sqlite3

# Azure and cloud config files
.azure/
azure-pipelines.yml
.github/

# Secrets and certificates
*.pfx
*.p12
*.key
*.crt
*.cer
*.pem
